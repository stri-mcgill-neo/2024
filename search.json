[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto® Fieldguide",
    "section": "",
    "text": "Welcome to the Data Curation/R Markdown module of the STRI-McGill-Isla Secas Neotropical field course. This module is meant as a complement for the rest of the curriculum and our main goals here are to: a) create interactive, data-driven, web products that capture analytical workflows, raw data, and data outputs; and b) give you the tools, motivation, and inspiration to make your science more accessible, transparent, and reproducible.\nBienvenido al módulo de Data Curation/R Markdown del curso de campo STRI-McGill-Isla Secas Neotropical. Este módulo pretende ser un complemento para el resto del plan de estudios y nuestros principales objetivos aquí son: a) crear productos web interactivos, basados en datos, que capturen flujos de trabajo analíticos, datos brutos y resultados de datos; y b) darle las herramientas, la motivación y la inspiración para hacer su ciencia más accesible, transparente y reproducible."
  },
  {
    "objectID": "docs/lessons/index.html",
    "href": "docs/lessons/index.html",
    "title": "Welcome to the Quarto Fieldguide",
    "section": "",
    "text": "Welcome to the Data Curation/R Markdown module of the STRI-McGill Neotropical field course. This module is meant as a complement for the rest of the curriculum and our main goals here are to: a) create interactive, data-driven, web products that capture analytical workflows, raw data, and data outputs; and b) give you the tools, motivation, and inspiration to make your science more accessible, transparent, and reproducible.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Lessons\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nLesson 1: Module 🦉 Overview\n\n\n\n\n\nIn the first lesson, we provide an overview for this module of the course. We cover the main objectives & expectations, introduce the various tools we will use, & layout some of the motivation and rationale for the module.  En la primera lección, ofrecemos una visión general de este módulo del curso. Cubrimos los principales objetivos y expectativas, presentamos las distintas herramientas que utilizaremos y exponemos algunas de las motivaciones y fundamentos del módulo.\n\n\n\n\n\n\nJanuary 11, 2024\n\n\n43 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Quarto® Fieldguide",
    "section": "",
    "text": "Welcome to the Data Curation/R Markdown module of the STRI-McGill-Isla Secas Neotropical field course. This module is meant as a complement for the rest of the curriculum and our main goals here are to: a) create interactive, data-driven, web products that capture analytical workflows, raw data, and data outputs; and b) give you the tools, motivation, and inspiration to make your science more accessible, transparent, and reproducible."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "",
    "text": "Estimated reading time: 31 minute(s).\n\nAs of today, this article has been cited at least 2359 times.  2\n\nTiempo estimado de lectura: 31 minuto(s).\n\nA fecha de hoy, este artículo ha sido citado al menos 2359 veces  8"
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#overview-objectives",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#overview-objectives",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Overview & Objectives",
    "text": "Overview & Objectives\nWelcome to the Data Curation/Quarto module of the STRI-McGill 2024 course on Neotropical Biology, Environments, and Conservation (BIOL 640/553) & Foundations of Environmental Policy (ENVR 610). This module is meant as a complement for the rest of the curriculum and our main goals here are two-fold. First, is to create interactive, data-driven, web products that capture analytical workflows, raw data, and data outputs. Second is to give you the tools, motivation, and inspiration to make your science more accessible, transparent, and reproducible.\n\nIf you have not already done so, please read the short post on Using this Site before continuing.\n\nWe will use Quarto–an open-source scientific and technical publishing system to build our web products. This site itself is not only the guidebook for your web products but is also created with the same tools you will use for your projects. More on that below.\nIn this module of the course, we will learn how to:\n\nSet up a working environment by installing R, RStudio, Quarto, and various R packages (e.g., knitr, tidyverse, reactable).\nRender interactive data tables, figures, graphics, maps, diagrams, and more.\nTroubleshoot problems using effective web searches, GitHub repositories, forums like Stack Overflow, and of course, our wit.\nReference other works and create citeable articles.\n(if there is interest) Use git and GitHub Pages for hosting our work (this is not a requirement of the course).\n\nWhat is a web product?\nOk, first things first. What do we mean by a web product? Well, for the purposes of this module, we consider a web product to be, primarily, a collection of HTML documents that can be opened with a browser like Chrome, Firefox, etc. That doesn’t necessarily mean that it needs to be hosted on the web, just that anyone can access the information without installing special software or understanding specific tools.\n\nIt is NOT a requirement of this course to publish your web product online.\n\nFurthermore, we will use R Markdown and the Distill framework to create what are called static (as opposed to dynamic) web products. The difference is straightforward. Dynamic 1 means that anytime a page loads, the content and look are tailored to the user, like Facebook or Twitter. Static means that everyone who visits the site sees the same thing.\nJust because your web product is static does not mean it will be dull. Unlike PDF documents, your web products will have dynamic, interactive components like tables, figures, maps, and so on. Consider this example of Supplementary Material that we submitted for a recent paper. Here is the pdf version (written in R Markdown & LaTeX) and here is the HTML version. While the content of the two documents are identical, their functionalities are not. The first thing to notice is that most of the data tables in the PDF document (called Supplementary Data) were too big to fit in the document and instead are uploaded as separate, stand-alone, text files to the journal’s website. On the other hand, in the HTML version, every data table is embedded in the document.\nGo ahead and check out the Content Description section and click on any of the links that say Supplementary Data. Supplementary Data 2 for example has 13 columns and 911 rows, far to large to fit (comfortably) in a PDF document. Have a look at Supplementary Data 3. Notice that you can copy or download the contents of the table, sort, search (try searching for invertebrate), and expand the full table (under Show entries, select All). This table even contains hyperlinks that lead to other important information. Go ahead and click on one of the links. Moving on."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#motivation",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#motivation",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Motivation",
    "text": "Motivation\nNext, I want take a moment to explore some of the motivation and rationale behind this module of the course. In subsequent lessons we get into more specific details on many of these topics, but for now let’s just stick with the high level stuff.\nWhy a web product?\nGood question. For me the answer is Open Science—a movement to make scientific research (including publications, data, physical samples, and software) and its dissemination accessible to all levels of society, amateur or professional (Woelfle, Olliaro, and Todd 2011). Creating a web product can help make your science more accessible, transparent, and reproducible.\nConsider that many journals and journal articles are behind paywalls that most people can’t access without paying an unreasonable price. This sucks, and while people are pushing back against this paradigm, for now it is the reality. We do our best to publish open access articles, but sometimes that is not possible. A website allows you to share your science with a wider audience. By and large, journal articles are highly technical documents. There is nothing wrong with that; it is the nature of the medium. But it can make the information inaccessible to non-experts. By also presenting your work as a web product, you have the opportunity to tell the story behind the science, which can have important outreach implications. (Forrester 2017).\nA typical journal article is only a few pages long, but we all know that a lot more goes into a study than what we usually see in print. Even with extensive supplementary material, authors are limited in what they can include in their publication. A web product frees you from these limitations. A web page gives you a place to discuss all the things that didn’t make it into your publication and tell a more complete story of your science. Do you have a gallery of photos from your field work? How about a bunch of statistical tests you tried that didn’t work? Or some personal thoughts about the system you studied? In most cases, this information would be inappropriate for a journal article, but it is still useful and interesting information to share.\nI think it is an important obligation of all scientists to make their studies transparent and reproducible. If you publish a study, with minimal effort I should be able to find your data, do the same analyses, and come to the same conclusions. There should be no mystery. Unfortunately, this is not always the case. In my own field of microbial ecology, it can be a daunting task to find raw data from other studies, and even harder to figure out exactly how the data were analyzed. Without proper documentation, you may even forget how you did something. Here is a sobering quote from a Nature News feature on the results of a survey of 1,500 scientists on the state of reproducible science.\n\n More than 70% of researchers have tried and failed to reproduce another scientist’s experiments, and more than half have failed to reproduce their own experiments. Those are some of the telling figures that emerged from Nature’s survey of 1,576 researchers who took a brief online questionnaire on reproducibility in research.  (Baker 2016)\n\n\nHowever, if you build a web product around your project where you document everything you do, no matter how trivial, you can avoid these pitfalls and produce truly reproducible and transparent science. Everything I do now ends up on a project website. I can easily share the information, and I no longer have directories on my computer filled with random bits of information. My web pages have a much better memory than I do. So what is reproducible and transparent science? It turns out that there really isn’t a standard, well-defined definition.\nAccording to this article in Science Translational Medicine, reproducibility …\n\n` … [is a] set of procedures that permit the reader of a paper to see the entire processing trail from the raw data and code to figures and tables.  (Goodman, Fanelli, and Ioannidis 2016).\n\nOr the U.S. National Science Foundation (NSF) defines it this way …\n\n` … refers to the ability of a researcher to duplicate the results of a prior study using the same materials as were used by the original investigator.  (Cacioppo et al. 2015)\n\nOf course, all of this is easier said than done. Researchers interested in reaching a wider audience and presenting tranparent and reproducible science face many challenges; they are under a lot of pressure to produce papers and often not given the chance to pursue these activities (Forrester 2017). So what can we do about it? I think that a good first step is to create web products that embrace the concepts of accessibility, transparency, and reproducibility. Institutional outreach and media departments do an incredible job of presenting the highlights of science, but they do not have the time or resources to go much deeper. I believe that with a little organization, training, and support we can all create web products that add value to the science, whether as educational and reference tools, or as outreach components.\nConsider again the paper we recently published on an acute hypoxic event in Bocas del Toro published in Nature Communications. All Nature journals now require authors to adhere to Reporting standards and availability of data, materials, code and protocols.\n\n … authors are required to make materials, data, code, and associated protocols promptly available to readers without undue qualifications. \n\nAuthors must include a Data availability and Code availability statements in their papers. Here is the Code Availability statement from our paper.\n\n\n\n\n\n\n\n\nAnd here is @coraloha reaction on Twitter. Some people get really jazzed about Open Science  3\n\n\n\nWhoaaaaaa now this is open science to the next level! And the name, come on…Metal AF 🔥 🎸 🤘 https://t.co/8sznPR5QYz\n\n— Dr. Chris Wall ((coraloha?)) July 29, 2021\n\n\n\n\n Assignment\nSo what do you think? Is Open Science important? Do you think web products can help communicate your science in a more accessible, transparent, and reproducible way? Your assignment is to read up on Open Science and reproducible research. There is a lot of debate on this subject and what I presented above is my view on the topic. It important that you form your own opinion. Here are a few articles to get you started but I do encourage you to dig deeper.\n\n\n1,500 scientists lift the lid on reproducibility (Baker 2016)\n\n\nWhat does research reproducibility mean? (Goodman, Fanelli, and Ioannidis 2016)\n\n\nA manifesto for reproducible science (Munafò et al. 2017)\n\n\nMoving along.\nWhy R, RStudio, & R Markdown?\nThere are many ways to make a website—–Squarespace, Wordpress, Wix, and so on. You can even code your own website in HTML, CSS, and JavaScript. However, in my experience, none of these platforms allow you to run and document code while constructing web products quite like the combination of R, RStudio, & R Markdown. As with everything there are limitations, but I feel the benefits outweigh the drawbacks.\nR\nR is both a programming language and a software environment for statistical computing and graphics. At some point, I imagine you will all need to need to embrace a programming environment to analyze your data and summarize your findings using figures, tables, etc. R is certainly not the only way to do this; however I believe this environment offers a valuable suite of tools for your scientific needs. The benefits of R include; a) it is free and open source, b) its capabilities are extended through user-created packages4, c) it has a huge community of users (which means it is well supported), d) it is powerful and flexible.\nRStudio\nRStudio is an integrated development environment (IDE) for R language 5. Take a moment to familiarize yourself with the idea of an IDE—in a nutshell, RStudio provides a holistic working environment to process (R) code, generate figures/tables, and create websites.\n\nImagine a car. Think of R as the engine and the RStudio IDE as the dashboard.\n\nR Markdown\nR Markdown is really the bread and butter of what we will be doing. R Markdown is a file format (.Rmd) for making dynamic documents with R. R Markdown combines the syntax of Markdown with the language (and environment) of R. R Markdown documents are written in Markdown—a lightweight markup language (like HTML), that uses a relatively simple syntax to facilitate the transformation of human-readible text files into .html or .pdf documents. What this means is that rather than writing HTML and CSS code to make a website, you write your content in Markdown, which is then translated (by RStudio in this case) to web content. (R) code in your document is embedded within code chunks. During the building of a page or site, RStudio identifies code chunks, runs the code, translates the results to Markdown, and then renders the output to a HTML file.\n\nYou do not need to include R code to produce a R Markdown web product. If fact, I learned R by first writing R Markdown documents.\n\n\n\n\n\n\n\n\n         \n\nThe rendering process—creating web pages from R Markdown documents (R code plus Markdown). This figure contains clickable links if you are interested in learning more about these tools.\n\n\nWhen a page or site is rendered, the R code in your R Markdown document (.Rmd) is first processed by a program called knitr. Knitr executes all the R code, knits the results together with the Markdown text, and creates a new Markdown document. The new Markdown document is then processed by PanDoc, which converts the Markdown syntax into HTML and CSS code. PanDoc is like a swiss-army knife for Markdown—–it can covert many types of Markdown documents into a variety of other formats. Don’t worry, most of these steps happen behind the scenes. As long as you have a properly formatted R Markdown document, these tools will take care of the rest.  6\nWhy Quarto?\nINSET TEXT"
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#expectations",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#expectations",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Expectations",
    "text": "Expectations\nLet’s take a moment to go through what we expect of you and what you should expect of me as your instructor.\nStudent role\nThroughout this field course, you will all be designing and running experiments, making observations and measurements, collecting data, etc., often as part of a group with fellow students. Your job for this module of the course is to take all the parts of your projects—hypotheses, background information, methods, results, and conclusions—and capture these elements in a R Markdown web product using the Distill framework.\nYou have four choices on how to present your projects.\n\nWebsite: You can present your projects in website style using the Distill website template. Here is an example of a Distill website we created for a recent publication on an acute hypoxic event in Bocas del Toro called Hypocolypse.\nBlog: Or you can present your projects in blog style using the Distill blog template. Want an example of a blog created using Distill? Well, you’re looking at one right now :)\nMarkdown PDF: INSERT TEXT\nMarkdown Presentation: : INSERT TEXT\n\nWe will get into the nitty-gritty of the differences between the two formats in subsequent lessons. For now, let’s summarize the key differences.\nStructural difference: A website is simply a collection of pages that can be accessed via the navigation bar at the top of a page. A blog contains 1) a collection of posts plus 2) a dedicated page to list all posts, called a listing page. The listing page is usually, but not always, the home page. A Distill blog is basically a distill website with added blog posts.\nLayout difference: Websites require you to manually set up links to pages on your site. Within a blog, Distill creates the listing page, which collects links to posts for you, displaying key metadata (like date published, author, categories, title, etc.) and a thumbnail image.\nWorkflow difference: All pages on a Distill website (and root pages of blogs) are re-rendered (i.e., re-built) each time the site is built. However, individual blog posts must be rendered on their own, with intent. Why? Well, it is because R packages are upgraded all the time and upgrades tend to break older code. So continuously re-rendering really old posts is nearly impossible to do without errors.\n So which is better, a Distill blog or website? Well, that depends on how you want to portray and display your projects. OK then, which is easier? Based on my experience using Distill (5 websites and now 1 blog), I would have to say that building and managing a website is slightly more intuitive than a blog. This mainly has to do with how files are organized in your working directory, basically the structural differences I described above. The directory of a website has a flat structure, meaning all of your R Markdown documents (.Rmd) are in the main directory. With a blog, the .Rmd files are collected in the _posts directory. This structure can make it tricky sometimes to figure out how to create links that connect different parts of the site, so called internal link. But really, both have roughly the same learning curve; a tiny bit steep at the beginning then a plateau of smooth sailing. So my advivce is go with what works best for you.\n\n Assignment\nYour first assignment is to think about the format you want to use, website or blog. You do not have to decide now but do check out the examples provided above to get a better sense of the format differences between the two. If you’re up to it, go ahead and read through the Distill website template and the Distill blog template pages. If you have little or no experience with this type of coding, most of the content on these pages will be gibberish. But fear not! Soon enough, this will all make sense.\nLastly, I wanted to add that some of you may have a lot of experience with these tools already. That’s great––you can help your classmates with their projects. If you think something I say doesn’t make sense, please say something. I would rather do something the right way than be right about the way I am doing something.\nInstructor role\nAs an instructor, my role is as guide and facilitator. My philosophy is that I teach the way I learn; to create a venue where you can be curious, get your hands dirty, make mistakes, and explore. I’m here to help you see what’s possible and help you create something you are proud of. Towards this end, I will write tutorials and lessons and help you work through the material to achieve your goals for the module. If you want to incorporate some particular functionality in your projects that I do not cover in the lessons, I will help you figure out how to do it. You can expect me to work with each of you individually on various aspects of your projects.\nYou should also expect me to be patient. I know first hand how difficult some of this material can be to digest and a big part of my role is helping you avoid many of the potholes and pitfalls I stumbled over and fell in. I can promise you that, at times, this process will be a little frustrating. But I can also promise that with some hard work (and maybe a few tears), you will have the tools to create a range of useful and beautiful documents.\nFinally, I am happy to write additional tutorials and lessons covering material not included on the site already. So please, pretty please, let me know if there is something extra you want to learn and I will write a post so other students can follow along."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#housekeeping",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#housekeeping",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Housekeeping",
    "text": "Housekeeping\nA little housekeeping to finish up. Unfortunately this is not a formal course on R coding or statistics. Given the time we have, these topics are beyond the scope of this module—we want you in the field working on experiments as much as possible, not sitting in front of you computer the whole time :) This doesn’t mean you won’t be performing statistical analyses; it just means that we do not have any formal lectures planned for these topics. Of course, if there is a specific analysis you wish to perform or test you want to run, the instructors and/or your fellow students will help you write the code.\nTo get the full benefit of using R Markdown, an understanding of R is helpful but not required. That said, if you persist with R Markdown you will learn R, specifically when running analyses and rendering the results as figures or tables. In fact, when I first started creating R Markdown documents a couple of years ago my knowledge of R itself was downright awful. Working with R Markdown dramatically increased my understanding of writing R code for statistical analyses.\nNext, we need to talk about operating systems (OS). I use Mac OSX and Linux but unfortunately I have little experience implementing these tools in Windows. If you are on a Windows machine, don’t worry; we will make it all work, it may just take a little more effort. Tons of people use Windows with R, RStudio, and R Markdown; sadly for you I do not happen to be one of them :(\nThis website is a living document, meaning that it will be updated continuously. I will make announcements when new material is added. The structure of the site is simple. All lessons and homework are listed on the landing page in order. Start at the bottom and work your way up; that way the newest material is always first. The navigation bar at the top has quick links to tools, resources, etc.\n\n Assignment\nOne more thing I would like you to do before we wrap up. Go back through this page from the top. You do not have to read the contents again (yawn) I just want you to make note of the different elements—text formatting (e.g., italics and bold), headers, table of contents, footnotes and asides, hyperlinks, appendices, citations, images, etc. You will be incorporating many of these elements in your web products. Don’t worry about the details right now, we will cover them in more detail later.\nThat’s all for now."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#visión-general-y-objetivos",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#visión-general-y-objetivos",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Visión general y objetivos",
    "text": "Visión general y objetivos\nBienvenido al módulo de Curación de Datos/Quarto del curso STRI-McGill 2024 sobre Biología Neotropical, Entornos y Conservación (BIOL 640/553) y Fundamentos de Política Medioambiental (ENVR 610).Este módulo pretende ser un complemento para el resto del plan de estudios y nuestros principales objetivos son dos. En primer lugar, es crear productos web interactivos, basados en datos que capturen los flujos de trabajo analíticos, los datos brutos y los resultados de los datos. La segunda es darte las herramientas, la motivación y la inspiración para que tu ciencia sea más accesible, transparente y reproducible.\n\nSi aún no lo has hecho, lee el breve post sobre Cómo utilizar este sitio antes de continuar.\n\nUtilizaremos Quarto–un sistema de publicación científica y técnica de código abierto para construir nuestros productos web. Este sitio en sí no es sólo la guía para tus productos web, sino que también es creado con las mismas herramientas que utilizarás para tus proyectos. Más información a continuación.x`x\nEn este módulo del curso aprenderemos a:\n\nConfigurar un entorno de trabajo instalando R, RStudio, Quarto, y varios paquetes de R (p. ej, knitr, tidyverse, reactable).\nRenderiza tablas de datos interactivas, figuras, gráficos, mapas, diagramas y mucho más.\nResuelve problemas utilizando búsquedas eficaces en Internet, GitHub repositorios, foros como Stack Overflow y, por supuesto, nuestro ingenio.\nHaz referencia a otras obras y crea artículos citables.\n(si hay interés) Utiliza git y Páginas de GitHub para alojar nuestro trabajo (esto no es un requisito del curso).\n\n¿Qué es un producto web?\nBien, lo primero es lo primero. ¿Qué entendemos por producto web? Bien, a efectos de este módulo, consideramos que un producto web es, principalmente, una colección de documentos HTML que se pueden abrir con un navegador como Chrome, Firefox, etc. Eso no significa necesariamente que tenga que ser alojado en la web sólo que cualquiera pueda acceder a la información sin necesidad de instalar software especial o conocer herramientas específicas.\n\nNO es un requisito de este curso publicar tu producto web en Internet.\n\nAdemás, utilizaremos R Markdown y el framework Distill para crear lo que se denomina estáticos (en contraposición a dinámico). La diferencia es sencilla. Dinámico 7 significa que cada vez que se carga una página, el contenido y el aspecto se adaptan al usuario, como en Facebook o Twitter. Estático significa que todos los que visitan el sitio ven lo mismo.\nSólo porque tu producto web sea estático no significa que sea aburrido. A diferencia de los documentos PDF, tus productos web tendrán componentes dinámicos e interactivos, como tablas, figuras, mapas, etc. Considera este ejemplo de Material Complementario que presentamos para un trabajo reciente. Este es el versión pdf (escrita en R Markdown & LaTeX) y aquí está el versión HTML. Aunque el contenido de ambos documentos es idéntico, sus funcionalidades no lo son. Lo primero que hay que observar es que la mayoría de las tablas de datos del documento PDF (llamadas Supplementary Data) eran demasiado grandes para caber en el documento y, en su lugar, se suben como archivos de texto independientes al sitio web de la revista. En cambio, en la versión HTML, todas las tablas de datos están incrustadas en el documento.\nEcha un vistazo al Descripción del contenido y haz clic en cualquiera de los enlaces que dicen Supplementary Data. Los Datos suplementarios 2, por ejemplo, tienen 13 columnas y 911 filas, demasiado grandes para caber (cómodamente) en un documento PDF. Echa un vistazo a Supplementary Data 3. Observa que puedes copiar o descargar el contenido de la tabla, ordenar, buscar (prueba a buscar por invertebrados) y ampliar la tabla completa (en Show entries selecciona All). Esta tabla contiene incluso hipervínculos que llevan a otra información importante. Adelante, haz clic en uno de los enlaces. Sigue adelante."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#motivación",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#motivación",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Motivación",
    "text": "Motivación\nA continuación, quiero dedicar un momento a explorar algunas de las motivaciones y fundamentos de este módulo del curso.En lecciones posteriores entraremos en detalles más específicos sobre muchos de estos temas, pero por ahora vamos a ceñirnos a las cosas de alto nivel.\n¿Por qué un producto web?\nBuena pregunta. Para mí la respuesta es Ciencia Abierta: un movimiento para hacer que la investigación científica (incluyendo publicaciones, datos, muestras físicas y software) y su difusión sean accesibles a todos los niveles de la ya sean aficionados o profesionales (Woelfle, Olliaro, and Todd 2011). Crear un producto web puede ayudar a que tu ciencia sea más accesible, transparente y reproducible.\nTen en cuenta que muchas revistas y artículos de revistas se encuentran detrás de muros de pago a los que la mayoría de la gente no puede acceder sin pagar un precio irrazonable. Esto es un asco, y aunque la gente está luchando contra este paradigma, por ahora ésta es la realidad. Hacemos todo lo posible por publicar artículos de acceso abierto, pero a veces no es posible. Una página web te permite compartir tu ciencia con un público más amplio. En general, los artículos de las revistas son documentos muy técnicos. No hay nada malo en ello; es sólo la naturaleza del medio. Pero esto puede hacer que la información sea inaccesible para los no expertos. Si también presentas tu trabajo como un producto web, tienes la oportunidad de contar la historia que hay detrás de la ciencia, lo que puede tener importantes implicaciones de divulgación (Forrester 2017).\nUn típico artículo de revista tiene unas pocas páginas, pero todos sabemos que en un estudio intervienen muchas más cosas de las que solemos ver impresas. Incluso con un amplio material suplementario, los autores están limitados por lo que pueden incluir en su publicación. Con un producto web te liberas de estas limitaciones. Una página web te da un lugar para hablar de todo lo que no ha entrado en tu publicación y para contar una historia más completa de tu ciencia. ¿Tienes una galería de fotos de tu trabajo de campo? ¿Y un montón de pruebas estadísticas que probaste y no funcionaron? ¿O algunas reflexiones personales sobre el sistema que estudias? En la mayoría de los casos, esta información sería inapropiada para un artículo de revista, pero sigue siendo útil e interesante compartirla.\nCreo que una obligación importante de todos los científicos es hacer que sus estudios sean transparentes y reproducibles.Si publicas un estudio, yo debería -con un esfuerzo mínimo- poder encontrar tus datos, realizar los mismos análisis y llegar a las mismas conclusiones. No debería haber ningún misterio. Lamentablemente, no siempre es así. En mi propio campo de la ecología microbiana, puede ser una tarea desalentadora encontrar datos brutos de otros estudios y aún más difícil averiguar exactamente cómo se analizaron los datos. Sin la documentación adecuada, puedes incluso olvidar cómo hiciste algo. He aquí una cita aleccionadora de un artículo de Nature News sobre los resultados de una encuesta realizada a 1.500 científicos sobre el estado de la ciencia reproducible.\n\n Más del 70% de los investigadores ha intentado reproducir los experimentos de otro científico y no lo ha conseguido, y más de la mitad no ha logrado reproducir sus propios experimentos. Estas son algunas de las reveladoras cifras que se desprenden de la encuesta realizada por Nature a 1,576 investigadores que respondieron a un breve cuestionario en línea sobre la reproducibilidad en la investigación.  (Baker 2016)\n\n\nSin embargo, si construyes un producto web en torno a tu proyecto, en el que documentes todo lo que haces por trivial que sea, puedes evitar estos escollos y producir ciencia verdaderamente reproducible y transparente. Todo lo que hago ahora acaba en una página web del proyecto. Puedo compartir fácilmente la información y ya no tengo directorios llenos de información aleatoria en mi ordenador. Mis páginas web tienen mucha más memoria que yo. Entonces, ¿qué es la ciencia reproducible y transparente? Resulta que en realidad no existe una definición estandarizada y bien definida\nSegún este artículo de Science Translational Medicine, la reproducibilidad …\n\n` … [is a] conjunto de procedimientos que permiten al lector de un artículo ver todo el proceso, desde los datos brutos y el código hasta las figuras y tablas.  (Goodman, Fanelli, and Ioannidis 2016).\n\nO los EE.UU. National Science Foundation (NSF) lo define así …\n\n` … se refiere a la capacidad de un investigador para duplicar los resultados de un estudio anterior utilizando los mismos materiales que utilizó el investigador original.  (Cacioppo et al. 2015)\n\nPor supuesto, todo esto es más fácil decirlo que hacerlo. Los investigadores interesados en llegar a un público más amplio y presentar ciencia transparente y reproducible se enfrentan a muchos retos; están sometidos a mucha presión para producir artículos y a menudo no se les da la oportunidad de dedicarse a estas actividades (Forrester 2017). ¿Qué podemos hacer al respecto? Creo que un buen primer paso es crear productos web que adopten los conceptos de accesibilidad, transparencia y reproducibilidad. Los departamentos institucionales de divulgación y medios de comunicación hacen un trabajo increíble presentando los aspectos más destacados de la ciencia, pero no tienen tiempo ni recursos para profundizar mucho más. Creo que con un poco de organización, formación y apoyo todos podemos crear productos web que añadan valor a la ciencia,ya sea como herramientas educativas y de referencia, o como componentes de divulgación.\nPensemos de nuevo en el artículo que publicamos recientemente sobre un episodio de hipoxia aguda en Bocas del Toro, publicado en Nature Communications. Todas las revistas Nature exigen ahora a los autores que se adhieran a Reporting standards and availability of data, materials, code and protocols.\n\n … los autores están obligados a poner a disposición de los lectores los materiales, datos, códigos y protocolos asociados sin reservas. \n\nLos autores deben incluir un Disponibilidad de datos y Disponibilidad de en sus documentos. Aquí está la declaración de disponibilidad del código de nuestro documento.\n\n\n\n\n\n\n\n\nY aquí está @coraloha en Twitter. Algunas personas se entusiasman con la ciencia abierta  9\n\n\n\nWhoaaaaaa now this is open science to the next level! And the name, come on…Metal AF 🔥 🎸 🤘 https://t.co/8sznPR5QYz\n\n— Dr. Chris Wall ((coraloha?)) July 29, 2021\n\n\n\n\n Assignment\nEntonces, ¿qué tú piensas? ¿Es importante la Ciencia Abierta? ¿Crees que los productos web pueden ayudar a comunicar tu ciencia de forma más accesible, transparente y reproducible? Tu tarea consiste en leer sobre la Ciencia Abierta y la investigación reproducible. Hay mucho debate sobre este tema y lo que he presentado más arriba es mi opinión al respecto. Es importante que te formes tu propia opinión. Aquí tienes algunos artículos para empezar, pero te animo a que profundices.\n\n\n1,500 scientists lift the lid on reproducibility (Baker 2016)\n\n\nWhat does research reproducibility mean? (Goodman, Fanelli, and Ioannidis 2016)\n\n\nA manifesto for reproducible science (Munafò et al. 2017)\n\n\nAvanzando.\n¿Por qué R, RStudio y R Markdown?\nHay muchas formas de crear un sitio web: SquareSpace, Wordpress, Wix, etc. Incluso puedes codificar tu propio sitio web en HTML, CSS y JavaScript. Sin embargo, según mi experiencia, ninguna de estas plataformas te permite ejecutar y documentar código mientras construyes productos web como la combinación de R, RStudio y R Markdown. Como en todo, hay limitaciones, pero creo que las ventajas superan a los inconvenientes.\nR\nR es tanto un lenguaje de programación como un entorno de software para cálculo estadístico y gráficos. En algún momento, imagino que todos necesitaréis adoptar un entorno de programación para analizar vuestros datos y resumir vuestras conclusiones mediante figuras, tablas, etc. Ciertamente, R no es la única forma de hacerlo; sin embargo, creo que este entorno ofrece un valioso conjunto de herramientas para tus necesidades científicas. Las ventajas de R incluyen; a) es gratuito y de código abierto, b) sus capacidades se amplían mediante paquetes creados por los usuarios10, c) tiene una gran comunidad de usuarios (lo que significa que está bien soportado), d) es potente y flexible.\nRStudio\nRStudio es un entorno de desarrollo integrado (IDE) para el lenguaje R11. Tómate un momento para familiarizarte con la idea de un IDE: en pocas palabras, RStudio proporciona un entorno de trabajo holístico para procesar código (R), generar figuras/tablas y crear sitios web.\n\nImagina un coche. Piensa en R como el motor y en el IDE RStudio como el salpicadero.\n\nR Markdown\nR Markdown es realmente el pan de cada día de lo que vamos a hacer. R Markdown es un formato de archivo (.Rmd) para crear documentos dinámicos con R. R Markdown combina la sintaxis de Markdown con el lenguaje (y el entorno) de R. Los documentos R Markdown se escriben en Markdown-–a ligero lenguaje de marcado (como HTML), que utiliza una sintaxis relativamente sencilla para facilitar el transformación de archivos de texto legibles por humanos en .html o .pdf documentos. Lo que esto significa es que en lugar de escribir código HTML y CSS para hacer un sitio web, escribes tu contenido en Markdown, que luego es traducido (por RStudio en este caso) a contenido web. El código (R) de tu documento se incrusta dentro de code chunks. Durante la construcción de una página o sitio, RStudio identifica los trozos de código, ejecuta el código, traduce los resultados a Markdown y, a continuación, renderiza el resultado en un archivo HTML.\n\nNo necesitas incluir código R para producir un producto web R Markdown. De hecho, yo aprendí R escribiendo primero documentos R Markdown.\n\n\n\n\n\n\n\n\n         \n\nEl proceso de renderizado—creación de páginas web a partir de documentos R Markdown (código R más Markdown). Esta figura contiene enlaces en los que puedes hacer clic si te interesa saber más sobre estas herramientas.\n\n\nCuando se visualiza una página o un sitio, el código R de tu documento R Markdown (.Rmd) es procesado primero por un programa llamado knitr. Knitr ejecuta todo el código R, une los resultados con el texto Markdown y crea un nuevo documento Markdown. A continuación, el nuevo documento Markdown es procesado por PanDoc, que convierte la sintaxis Markdown en código HTML y CSS. PanDoc es como una navaja suiza para Markdown: puede convertir muchos tipos de documentos Markdown en una gran variedad de formatos. No te preocupes, la mayoría de estos pasos se realizan entre bastidores. Mientras tengas un documento R Markdown correctamente formateado, estas herramientas se encargarán del resto.  12\nWhy Quarto?\nINSET TEXT"
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#expectativas",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#expectativas",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Expectativas",
    "text": "Expectativas\nDediquemos un momento a repasar lo que esperamos de ti y lo que deberías esperar de mí como instructora.\nPapel del alumno\nA lo largo de este curso de campo, todos diseñaréis y realizaréis experimentos, haréis observaciones y mediciones, recopilaréis datos, etc., a menudo formando parte de un grupo con otros compañeros. Tu trabajo en este módulo del curso consiste en tomar todas las partes de tus proyectos -hipótesis, información de fondo, métodos, resultados y conclusiones- y plasmar estos elementos en un informe. R Markdown utilizando la herramienta Destilar de Distill.\n\n Regardless of whether you are part of a group or running solo, you will each create a web product that contains the details for at least two projects you work on in the course.\n\nYou have two choices on how to present your projects.\n\nWebsite: You can present your projects in website style using the Distill website template. Here is an example of a Distill website we created for a recent publication on an acute hypoxic event in Bocas del Toro called Hypocolypse.\nBlog: Or you can present your projects in blog style using the Distill blog template. Want an example of a blog created using Distill? Well, you’re looking at one right now :)\nMarkdown PDF: INSERT TEXT\nMarkdown Presentation: : INSERT TEXT\n\nWe will get into the nitty-gritty of the differences between the two formats in subsequent lessons. For now, let’s summarize the key differences.\nStructural difference: A website is simply a collection of pages that can be accessed via the navigation bar at the top of a page. A blog contains 1) a collection of posts plus 2) a dedicated page to list all posts, called a listing page. The listing page is usually, but not always, the home page. A Distill blog is basically a distill website with added blog posts.\nLayout difference: Websites require you to manually set up links to pages on your site. Within a blog, Distill creates the listing page, which collects links to posts for you, displaying key metadata (like date published, author, categories, title, etc.) and a thumbnail image.\nWorkflow difference: All pages on a Distill website (and root pages of blogs) are re-rendered (i.e., re-built) each time the site is built. However, individual blog posts must be rendered on their own, with intent. Why? Well, it is because R packages are upgraded all the time and upgrades tend to break older code. So continuously re-rendering really old posts is nearly impossible to do without errors.\n So which is better, a Distill blog or website? Well, that depends on how you want to portray and display your projects. OK then, which is easier? Based on my experience using Distill (5 websites and now 1 blog), I would have to say that building and managing a website is slightly more intuitive than a blog. This mainly has to do with how files are organized in your working directory, basically the structural differences I described above. The directory of a website has a flat structure, meaning all of your R Markdown documents (.Rmd) are in the main directory. With a blog, the .Rmd files are collected in the _posts directory. This structure can make it tricky sometimes to figure out how to create links that connect different parts of the site, so called internal link. But really, both have roughly the same learning curve; a tiny bit steep at the beginning then a plateau of smooth sailing. So my advivce is go with what works best for you.\n\n Assignment\nYour first assignment is to think about the format you want to use, website or blog. You do not have to decide now but do check out the examples provided above to get a better sense of the format differences between the two. If you’re up to it, go ahead and read through the Distill website template and the Distill blog template pages. If you have little or no experience with this type of coding, most of the content on these pages will be gibberish. But fear not! Soon enough, this will all make sense.\nLastly, I wanted to add that some of you may have a lot of experience with these tools already. That’s great––you can help your classmates with their projects. If you think something I say doesn’t make sense, please say something. I would rather do something the right way than be right about the way I am doing something.\nPapel de instructor\nComo instructor, mi papel es el de guía y facilitador. Mi filosofía es que enseño como yo aprendo: para crear un lugar donde puedas ser curioso, ensuciarte las manos, cometer errores y explorar. Estoy aquí para ayudarte a ver lo que es posible y a crear algo de lo que te sientas orgulloso. Con este fin, escribiré tutoriales y lecciones y te ayudaré a trabajar con el material para alcanzar tus objetivos para el módulo. Si quieres incorporar alguna funcionalidad concreta en tus proyectos que no cubro en las lecciones, te ayudaré a averiguar cómo hacerlo. Puedes esperar que trabaje con cada uno de vosotros individualmente en varios aspectos de vuestros proyectos.\nTambién puedes esperar que sea paciente. Sé de primera mano lo difícil que puede resultar digerir parte de este material y gran parte de mi papel consiste en ayudarte a evitar muchos de los baches y escollos en los que yo tropecé y caí. Puedo prometerte que, a veces, este proceso será un poco frustrante. Pero también puedo prometerte que, con algo de trabajo duro (y quizá unas cuantas lágrimas), tendrás las herramientas para crear una serie de documentos útiles y hermosos.\nPor último, estaré encantada de escribir tutoriales y lecciones adicionales que cubran material no incluido ya en el sitio. Así que, por favor, hazme saber si hay algo más que quieras aprender y escribiré una entrada para que otros estudiantes puedan seguirme."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#limpieza",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#limpieza",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Limpieza",
    "text": "Limpieza\nUn poco de limpieza para terminar. Desgraciadamente no un curso formal sobre codificación R o estadística. Dado el tiempo de que disponemos, estos temas están fuera del alcance de este módulo: queremos que estés sobre el terreno trabajando en experimentos tanto como sea posible, no sentado frente al ordenador todo el tiempo :) Esto no significa que no vayas a realizar análisis estadísticos, sino que no tenemos previstas clases formales sobre estos temas. Por supuesto, si hay un análisis específico que desees realizar o una prueba que quieras ejecutar, los instructores y/o tus compañeros te ayudarán a escribir el código.\nPara obtener el máximo beneficio del uso de R Markdown, es útil tener conocimientos de R, pero no es necesario. Dicho esto, si persistes con R Markdown aprenderás R, concretamente al ejecutar análisis y presentar los resultados como figuras o tablas. De hecho, cuando empecé a crear documentos R Markdown hace un par de años, mis conocimientos de R eran pésimos. Trabajar con R Markdown aumentó drásticamente mi comprensión de la escritura de código R para análisis estadísticos.\nA continuación, tenemos que hablar de los sistemas operativos (SO). Yo utilizo Mac OSX y Linux, pero por desgracia tengo poca experiencia en la aplicación de estas herramientas en Windows. Si utilizas una máquina Windows, no te preocupes; haremos que todo funcione, sólo que puede costar un poco más de esfuerzo. Mucha gente utiliza Windows con R, RStudio y R Markdown; por desgracia para ti, yo no soy uno de ellos :(\nEste sitio web es un documento vivo, lo que significa que se actualizará continuamente. Haré anuncios cuando se añada nuevo material. La estructura del sitio es sencilla. Todas las lecciones y deberes están ordenados en la página de inicio. Empieza por abajo y ve subiendo; de este modo, el material más nuevo siempre está primero. La barra de navegación de la parte superior contiene enlaces rápidos a herramientas, recursos, etc.\n\n Assignment\nMe gustaría que hicieras una cosa más antes de terminar. Vuelve a recorrer esta página desde la parte superior. No hace falta que vuelvas a leer el contenido (bostezo), sólo quiero que tomes nota de los distintos elementos: el formato del texto (por ejemplo, cursiva y negrita), encabezados, índice, notas a pie de página y comentarios hipervínculos, apéndices, citas imágenes, etc. Incorporarás muchos de estos elementos en tus productos web. No te preocupes por los detalles ahora, los trataremos con más detalle más adelante.\nEso es todo por ahora."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#source-code",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#source-code",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Source Code",
    "text": "Source Code\nThe source code for this page can be accessed on GitHub  by clicking this link."
  },
  {
    "objectID": "docs/lessons/posts/lesson-1-module-overview/index.html#footnotes",
    "href": "docs/lessons/posts/lesson-1-module-overview/index.html#footnotes",
    "title": "Lesson 1: Module 🦉 Overview",
    "section": "Footnotes",
    "text": "Footnotes\n\nHenceforth, I use the term dynamic throughout these lessons to refer to a component of a document that does something or is interactive, like a table that scrolls or a map you can zoom in on. Do not confuse this with a dynamic website.↩︎\nTo get the number of citations for this article I used the function cr_citation_count from the rcrossref package. The function takes a Digital Object Identifier (DOI) as the input and searches CrossRef OpenURL to return the number of citations.↩︎\nIf you want to embed a tweet on a page, click on the ellipsis icon at the top of the tweet , select Embed Tweet, copy the HTML code provided, & plop it right into your qmd file. The only thing is you need to do is wrap the entire code in the HTML &lt;center&gt; & &lt;/center&gt; tags.↩︎\nThe Comprehensive R Archive Network (CRAN), R’s central software repository, currently contains 20273 packages. Hundreds more can be found in places like GitHub and Bioconductor↩︎\nRecent versions of RStudio now have the functionality to run Python code in your R Markdown document.↩︎\nThe figure above is called an image map, which is a HTML technique that allows you to create clickable areas on an image. I coded this so that each logo contains a different hyperlink. Try it out. Click here if you are interested in the source code.↩︎\nA partir de ahora, utilizaré el término dinámico a lo largo de estas lecciones para referirme a un componente de un documento que hace algo o es interactivo, como una tabla que se desplaza o un mapa al que se puede hacer zoom. No confundas esto con un sitio web dinámico.↩︎\nPara obtener el número de citas de este artículo he utilizado la función cr_citation_count de la página rcrossref paquete. La función toma un Identificador de Objeto Digital (DOI) como entrada y busca en CrossRef OpenURL para devolver el número de citas.↩︎\nSi quieres incrustar un tuit en una página, haz clic en el icono de la elipsis situado en la parte superior del tweet , select Embed Tweet, copia el código HTML proporcionado y colócalo en tu archivo qmd. Lo único que tienes que hacer es envolver todo el código en el HTML &lt;center&gt; & &lt;/center&gt; tags.↩︎\nThe Comprehensive R Archive Network (CRAN), el repositorio central de software de R, contiene actualmente 20273 paquetes. Puedes encontrar cientos más en lugares como GitHub y Bioconductor↩︎\nLas versiones recientes de RStudio tienen ahora la funcionalidad de ejecutar código Python en tu documento R Markdown.↩︎\nLa figura anterior se denomina mapa de imagen, que es una técnica HTML que te permite crear zonas clicables en una imagen. He codificado esto para que cada logotipo contenga un hipervínculo diferente. Pruébalo. Pulsa aquí si te interesa el código fuente.↩︎"
  }
]
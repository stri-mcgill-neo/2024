{"title":"Lesson 2: Build your Working 🧱️ Environment","markdown":{"yaml":{"title":"Lesson 2: Build your Working 🧱️ Environment","author":"Jarrod J Scott","description":"In this lesson we go through the steps building a working environment. Specifically, you will install R and RStudio IDE. You will also install some R packages needed to get started.\n","date":"2024-01-02","categories":["news","code","analysis"],"image":"files/feature.png","repository_url":"https://github.com/stri-mcgill-neo/2024/","reading-time":true,"knitr":{"opts_chunk":{"echo":true,"eval":false,"message":false,"warning":false}}},"headingText":"R","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load\n#| eval: true\n#| echo: false\n\nis_html = knitr::is_html_output()\npacman::p_load(tidyverse, fontawesome, slickR, downlit, \n               here, scholar, rcrossref, webdriver, rvest, \n               install = FALSE, update = FALSE)\n\nhere::i_am(\"assets/scripts/functions.R\")\nsource(here(\"assets/scripts/functions.R\"))\n```\n\nWe have a wide range of experience levels in this course, so this lesson is devoted to the basics of setting up your working environment and laying down a good foundation for your projects. I would like to give everyone a chance to get everything installed and to get comfortable with these new tools before we dive in. I realize that some of you may have a lot of this done already. Let's begin.\n\n::: aside\nEstimated reading time: `r round(reading_time(), digits = 0)` minute(s).\n:::\n\nIn this lesson you will install the basic tools needed for the course, namely R, R Studio, Quarto and a few R packages. Depending on your interests, you may also want to install some Quarto extensions. At its simplest, R is like the engine of a car while RStudio is like the dashboard. More precisely, R is the programming language that runs computations, while RStudio is an integrated development environment (IDE) that provides an interface with many convenient features and tools. Just as having access to a speedometer, rear view mirrors, and a navigation system makes driving much easier, using RStudio's interface makes using R much easier as well.\n\nAs I mentioned, our goals for this course are to build data-driven web products. Each lesson is built around adding functionality to your project. You will start with something simple and, hopefully, by the end have something awesome. Some of you may have more experience with some of these tools than I do. That's great---you can help me and help your classmates. If you think something I say is wrong, please tell me. I would rather do something the right way than be right about the wrong way I am doing something.\n\nThe other thing I want to mention is that I assure you this in not a web development course. As you go through this lesson it may *feel* like that is where we are heading, but I promise it is not. Markdown is built on top of HTML and CSS, so you will encounter these lanuguages from time to time. I am interested in functional sites that contain useful content, with maybe a little bit of flair. I have found that even a superficial knowledge of web development and design goes a long way in building good R Markdown sites.\n\n> It is important to follow the next steps in order. You must install R before RStudio or any R packages.\n\n\n[R](https://www.r-project.org/) is both a software language and an environment for statistical computing and graphics. At some point, you will need to embrace a programming environment to analyze your data and summarize your findings using figures, tables, etc. R is certainly not the only way to do this; however I believe this environment offers a valuable suite of tools for your scientific needs. The benefits of R include: **a**) it is free and open source; **b**) its capabilities are extended through user-created packages; **c**) it has a huge community of users (which means it is well supported); **d**) it is powerful and flexible. And we **need** R to run RStudio.\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"}  Assignment: Installing R\n\nIf you already have R installed please make use it is a relatively up-to-date version. If it is not, please consider reinstalling R.\n\n1.  Download and install R by going to <https://cloud.r-project.org/>.\n\n    -   **Windows**: Click on `Download R for Windows`, then click on `base`, then click on `Download R X.X.X for Windows`.\\\n    -   **macOS**: Click on `Download R for (Mac) OS X`, then under **Latest release:** click on `R-X.X.X.pkg`, where R-X.X.X is the version number. For example, the latest version of R as of `r format(Sys.Date(), \"%B %d, %Y\")` is R-4.1.3. *Note* for MAC users your choice will depend on whether your computer has an Intel or M1 chip.\\\n    -   **Linux**: Click on `Download R for Linux` and choose your distribution for more information on installing R for your setup.\n\n2.  Once R is installed, test the install. Open R and type `sessionInfo()`. If you don't get an error, then the install is good.\n\nFor more information, please have a look at these instructions for [Installing R and RStudio](https://rstudio-education.github.io/hopr/starting.html).\n\n# RStudio\n\n[RStudio](https://www.rstudio.com/) is an [integrated development environment (IDE)](https://en.wikipedia.org/wiki/Integrated_development_environment) for the R language. Take a moment to familiarize yourself with the idea of an IDE. RStudio is a syntax-highlighting editor that supports **direct code execution**; tools for plotting, history, debugging and workspace management. We will use RStudio to create our web and interactive data products.\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"} Assignment: Installing RStudio\n\nAgain, if you already have RStudio installed please make use it is a relatively up-to-date version. If it is not, please consider reinstalling RStudio.\n\n1)  Go to <https://www.rstudio.com/products/rstudio/download/>.\\\n2)  Scroll down and hit the **Download RStudion** button or choose an installer under **All Installers**. Please take note of the OS version required to run the version of RStudio you are downloading. For example, on my computer it says `Requires macOS 10.15+ (64-bit)`, however I am running `macOS 10.14+` so I had to install an older version. If need be, you can find older versions of RStudio [here](https://www.rstudio.com/products/rstudio/older-versions/).\\\n3)  Once RStudio is installed, open the application to make sure everything went ok.\n\nFor more information, please have a look at these instructions for [Installing R and RStudio](https://rstudio-education.github.io/hopr/starting.html).\n\n# R packages\n\nR packages extend the functionality of R by providing additional functions, data, and documentation. Packages are written by a worldwide community of R users and can be downloaded for free from numerous online repositories. A repository, or repo, is simply a place where packages are located on the web. The three most popular repositories for R packages are:\n\n-   The [Comprehensive R Archive Network, or CRAN](https://cran.r-project.org/web/packages/): the official R package repository, it is a network of ftp and web servers maintained by the R community around the world. The R foundation coordinates CRAN, and for a package to be published here, it needs to pass several tests that ensure the package is following [CRAN policies](https://cran.r-project.org/web/packages/policies.html).\n\n-   [Bioconductor](https://www.bioconductor.org/): this is a topic specific repository, intended for open source bioinformatics software. As with CRAN, Bioconductor has its own submission and review processes, and its community is very active.\n\n-   [Github](https://github.com/) : although this is not R specific, Github is probably the most popular repository for open source projects. Its popularity comes from the unlimited space for open source, the integration with git (a version control software), and its ease to share and collaborate with others. **But be aware that there is no review process associated with GitHub package repos**.\n\n```{r}\n#| eval: true\n#| echo: false\n#| message: false\n \nrequire(webdriver)\nrequire(rvest)\n\nurl <- \"https://cran.r-project.org/web/packages/\"\n# NEED to run this once, IN R\n# install_phantomjs()\npjs_instance <- run_phantomjs()\npjs_session <- Session$new(port = pjs_instance$port)\n# load URL to phantomJS session\npjs_session$go(url)\n# retrieve the rendered source code of the page\nrendered_source <- pjs_session$getSource()\n# parse the dynamically rendered source code\nhtml_document <- xml2::read_html(rendered_source)\n\ncount_xpath <- '/html/body/div/p[1]'\ncount_text <- html_document %>%\n  html_node(xpath = count_xpath) %>%\n  html_text(trim = T)\n\ncount_text <- count_text %>% stringr::str_extract(\"[0-9]+\")\n```\n\n```{r}\n#| eval: true\n#| echo: false\ncontent <- read_html(\"https://bioconductor.org/packages/3.14/bioc/\")\ntables <- content %>% html_table(fill = TRUE)\ntables <- data.frame(tables)\n```\n\nOn CRAN alone there are over `r count_text` packages available and an additional `r nrow(tables)` packages on Bioconductor. You will need a few packages to get going with your web project and you will install more as the need arises.\n\n### How to install R packages\n\nBefore you install any packages, check to see if the package is already installed. You have a few options. First, open R. If you want to see all the packages you have installed you can run:\n\n```{r}\n#| message: false\ninstalled.packages()\n```\n\nWhat about checking for a specific package, like `tmap`? `tmap` is an actively maintained open-source R-library for drawing [thematic maps](https://en.wikipedia.org/wiki/Thematic_map).\n\n```{r}\n#| message: false\n\"tmap\" %in% rownames(installed.packages())\n```\n\n```\n[1] FALSE\n```\n\nIf the output of this command is `TRUE`, you are good to go. If it says `FALSE` then the package is not installed.\n\nOr you can use the `library` command, which loads/attaches installed packages.\n\n```{r}\n#| message: false\nlibrary(tmap)\n```\n\nIf you do not get an error that means the package is already installed. However, if you see something like...\n\n```\nError in library(tmap) : there is no package called ‘tmap’`\n```\n\n...then the package needs to be installed.\n\n> I only use R (instead of RStudio) to install all of my packages. I have found this prevents any conflicts with installation location. Otherwise, I almost exclusively work in RStudio when creating web products.\n\nLet's run through a quick example. I have `r nrow(data.frame(installed.packages()))` R packages installed on my computer but I do not have `tmap`. Turns out that a stable version of `tmap` is available on [CRAN](http://cran.r-project.org/package=tmap) and a development version [GitHub](https://github.com/r-tmap/tmap)[^1]. First, here is how to install the stable version of the `tmap` package.\n\n[^1]: I figured this out by going to the `tmap` [CRAN](http://cran.r-project.org/package=tmap) repo and noticing that a GitHub page was listed under `URL`\n\n```{r}\n#| eval: false\n#| echo: true\ninstall.packages(\"tmap\")\n```\n\nIf all goes well, the beginning of the output should look something like this.\n\n```\nInstalling package into ‘/Users/scottjj/Library/R/4.1/library’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘wk’, ‘geometries’, ‘jsonify’, ‘rapidjsonr’,\n‘sfheaders’, ‘lwgeom’, ‘dichromat’, ‘s2’, ‘geojsonsf’, ‘tmaptools’, ‘sf’,\n‘stars’, ‘units’, ‘widgetframe’, ‘leafsync’, ‘leafem’\n```\n\nIn my case, the command is also installing around 15 dependencies---additional packages that `tmap` needs but that are not currently installed.\n\nIf instead we wanted to install the development version of [tmap](https://github.com/r-tmap/tmap#development), we need to install the `remotes` package and the run the `install_github` command[^2].\n\n[^2]: The authors state that in order to use the development version of `tmap`, it is recommended to use the development version of `tmaptools` as well\n\n```{r}\n#| echo: true\n#| eval: false\ninstall.packages(\"remotes\")\nlibrary(remotes)\ninstall_github(\"r-tmap/tmaptools\")\ninstall_github(\"r-tmap/tmap\")\n```\n\n```{r}\n#| echo: false\n#| eval: false\n\nlibrary(tmap)\nlibrary(tmaptools)\n\ndata(\"World\")\ncurrent.mode <- tmap_mode(\"view\")\n\n#tmap_mode(\"view\")\nna_sub <- World %>% subset(continent == 'North America') %>%\n  dplyr::filter(iso_a3 %in% c(\"JAM\", \"NIC\", \"PAN\", \"PRI\", \"SLV\", \"TTO\",\n                       \"BHS\", \"BLZ\", \"CRI\", \"CUB\", \"DOM\", \"GTM\", \"HND\", \"HTI\", \"MEX\"))\n\nsa_sub <- World %>% subset(continent == 'South America') %>%\n  dplyr::filter(iso_a3 %in% c(\"COL\", \"ECU\", \"VEN\", \"SUR\", \"GUY\"))\ntm_combo <- rbind(na_sub, sa_sub)\n```\n\nSweet. Let's see what this package can do. Here is a little toy example of an interactive thematic map made with `tmap`.\n\n```{r}\n#| echo: true\n#| eval: true\n#| code_folding: true\n#| fig-align: center\n#| message: false \n#| warning: false\n\nlibrary(tmap)\nlibrary(tmaptools)\ndata(\"World\")\ndata(metro)\ncurrent.mode <- tmap_mode(\"view\")\ntm_shape(World) +\n  tm_polygons(\"HPI\", palette = \"RdYlGn\", midpoint = 35) +\ntm_shape(metro) +\n  tm_bubbles(size = \"pop1950\") +\ntm_layout(design.mode = TRUE) +\ntm_view(set.view = c(lat = 9, lon = -81, zoom = 3))\n```\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"} Assignment: Installing R Packages\n\nOnce R and RStudio are installed you can install some essential packages. Remember, to install a package from CRAN, call the `library()` command with the package name in quotes `\"\"`, like so: `library(\"PACKAGE_NAME\")`\n\n-   [rmarkdown](https://cran.r-project.org/web/packages/rmarkdown/index.html): [R Markdown](https://rmarkdown.rstudio.com/) is a file format for making dynamic documents with R.\n-   [knitr](https://cran.r-project.org/web/packages/knitr/index.html): A general-purpose package for dynamic report generation in R.\n-   [distill](https://cran.r-project.org/web/packages/distill/index.html): R Markdown format for scientific and technical writing.\n-   [tidyverse](https://cran.r-project.org/web/packages/tidyverse/index.html): [Tidyverse](https://www.tidyverse.org/) is an opinionated collection of almost 30 R packages designed for data science. The [core tidyverse packages](https://www.tidyverse.org/packages/) are [ggplot2](https://ggplot2.tidyverse.org/), [tidyr](https://tidyr.tidyverse.org/), [dplyr](https://dplyr.tidyverse.org/), [readr](https://readr.tidyverse.org/), [tibble](https://tibble.tidyverse.org/), [forcats](https://forcats.tidyverse.org/), [purrr](https://purrr.tidyverse.org/), and [stringr](https://stringr.tidyverse.org/). These packages are loaded automatically when you run `library(tidyverse)`. Other packages in tidyverse need to be loaded separately with their own call to `library()`.\n\n\n> Note. If you are trying to install a package and get an error message containing something like `Timeout of 60 seconds was reached` you need to do the following:\n\nFirst run `getOption(\"timeout\")` to see what the timeout option is. I think the default is 60 seconds. If so, change it to something larger by running `options(timeout = seconds)` where `seconds` is an integer value. \n\n```{r}\ngetOption(\"timeout\")\noptions(timeout = 1000)\n```\n\nThis will only change the timeout for the current session. Once you quit R the setting will revert to 60 seconds. \n\nIf you have problems with any of these steps, we will help.\n\n# Getting Started\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"} Assignment: Get familiar with RStudio\n\nOnce you are all set up, open RStudio and start poking around. You can personalize the appearance of the IDE by going to `RStudio` \\> `Preferences`. You should also download this [cheat sheet](https://github.com/rstudio/cheatsheets/raw/main/rstudio-ide.pdf) that contains a lot of additional information on the RStudio IDE.\n\n# Concluding Remarks\n\nI wanted to leave you with a few final thoughts. I made my first commit to GitHub a little over three years ago with my first web product, a single page R Markdown HTML document. I am a microbial ecologist, and I was collaborating with four reef ecologists on a project about fish guts and microbes. Anyway, they were having a hard time understanding the microbial data, or I was doing a poor job of explaining it. So I made an HTML page outlining every step of my analysis, including all the code and results. My collaborators were so excited that they started sending me additional material to add to the page.\n\nAs the amount of material accumulated, the single page turned into a [project website](https://projectdigest.github.io/). I made a [GitHub repo](https://github.com/projectdigest/web/) for the site and used GitHub Pages to distribute site over the web. I did my best to document everything we did in that study. When we submitted the paper, I included the project website in the Data accessibility section so people could find information not included in the main paper or supplementary material. During the revision process, I was able to quickly address reviewer comments because I could pull material directly from the website without having to dig around in the depths of my computer.\n\n```{r}\n#| eval: true\n#| echo: false\nknitr::include_graphics(\"files/fish.png\")\n```\n\nThe site is nothing fancy but the entire project is now archived on the web. I learned by doing and that is my goal for you in this module. I also use R Markdown for presentations, my CV, and professional letters. Along the way, I have gained a lot of experience using other languages like HTML, CSS, and Hugo for my projects.\n\nAnd that's it for this lesson.\n\n##  Source Code {.appendix}\n\nThe source code for this page can be accessed on GitHub {{< fa brands github size=l >}} by [clicking this link](`r source_code()`). \n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load\n#| eval: true\n#| echo: false\n\nis_html = knitr::is_html_output()\npacman::p_load(tidyverse, fontawesome, slickR, downlit, \n               here, scholar, rcrossref, webdriver, rvest, \n               install = FALSE, update = FALSE)\n\nhere::i_am(\"assets/scripts/functions.R\")\nsource(here(\"assets/scripts/functions.R\"))\n```\n\nWe have a wide range of experience levels in this course, so this lesson is devoted to the basics of setting up your working environment and laying down a good foundation for your projects. I would like to give everyone a chance to get everything installed and to get comfortable with these new tools before we dive in. I realize that some of you may have a lot of this done already. Let's begin.\n\n::: aside\nEstimated reading time: `r round(reading_time(), digits = 0)` minute(s).\n:::\n\nIn this lesson you will install the basic tools needed for the course, namely R, R Studio, Quarto and a few R packages. Depending on your interests, you may also want to install some Quarto extensions. At its simplest, R is like the engine of a car while RStudio is like the dashboard. More precisely, R is the programming language that runs computations, while RStudio is an integrated development environment (IDE) that provides an interface with many convenient features and tools. Just as having access to a speedometer, rear view mirrors, and a navigation system makes driving much easier, using RStudio's interface makes using R much easier as well.\n\nAs I mentioned, our goals for this course are to build data-driven web products. Each lesson is built around adding functionality to your project. You will start with something simple and, hopefully, by the end have something awesome. Some of you may have more experience with some of these tools than I do. That's great---you can help me and help your classmates. If you think something I say is wrong, please tell me. I would rather do something the right way than be right about the wrong way I am doing something.\n\nThe other thing I want to mention is that I assure you this in not a web development course. As you go through this lesson it may *feel* like that is where we are heading, but I promise it is not. Markdown is built on top of HTML and CSS, so you will encounter these lanuguages from time to time. I am interested in functional sites that contain useful content, with maybe a little bit of flair. I have found that even a superficial knowledge of web development and design goes a long way in building good R Markdown sites.\n\n> It is important to follow the next steps in order. You must install R before RStudio or any R packages.\n\n# R\n\n[R](https://www.r-project.org/) is both a software language and an environment for statistical computing and graphics. At some point, you will need to embrace a programming environment to analyze your data and summarize your findings using figures, tables, etc. R is certainly not the only way to do this; however I believe this environment offers a valuable suite of tools for your scientific needs. The benefits of R include: **a**) it is free and open source; **b**) its capabilities are extended through user-created packages; **c**) it has a huge community of users (which means it is well supported); **d**) it is powerful and flexible. And we **need** R to run RStudio.\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"}  Assignment: Installing R\n\nIf you already have R installed please make use it is a relatively up-to-date version. If it is not, please consider reinstalling R.\n\n1.  Download and install R by going to <https://cloud.r-project.org/>.\n\n    -   **Windows**: Click on `Download R for Windows`, then click on `base`, then click on `Download R X.X.X for Windows`.\\\n    -   **macOS**: Click on `Download R for (Mac) OS X`, then under **Latest release:** click on `R-X.X.X.pkg`, where R-X.X.X is the version number. For example, the latest version of R as of `r format(Sys.Date(), \"%B %d, %Y\")` is R-4.1.3. *Note* for MAC users your choice will depend on whether your computer has an Intel or M1 chip.\\\n    -   **Linux**: Click on `Download R for Linux` and choose your distribution for more information on installing R for your setup.\n\n2.  Once R is installed, test the install. Open R and type `sessionInfo()`. If you don't get an error, then the install is good.\n\nFor more information, please have a look at these instructions for [Installing R and RStudio](https://rstudio-education.github.io/hopr/starting.html).\n\n# RStudio\n\n[RStudio](https://www.rstudio.com/) is an [integrated development environment (IDE)](https://en.wikipedia.org/wiki/Integrated_development_environment) for the R language. Take a moment to familiarize yourself with the idea of an IDE. RStudio is a syntax-highlighting editor that supports **direct code execution**; tools for plotting, history, debugging and workspace management. We will use RStudio to create our web and interactive data products.\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"} Assignment: Installing RStudio\n\nAgain, if you already have RStudio installed please make use it is a relatively up-to-date version. If it is not, please consider reinstalling RStudio.\n\n1)  Go to <https://www.rstudio.com/products/rstudio/download/>.\\\n2)  Scroll down and hit the **Download RStudion** button or choose an installer under **All Installers**. Please take note of the OS version required to run the version of RStudio you are downloading. For example, on my computer it says `Requires macOS 10.15+ (64-bit)`, however I am running `macOS 10.14+` so I had to install an older version. If need be, you can find older versions of RStudio [here](https://www.rstudio.com/products/rstudio/older-versions/).\\\n3)  Once RStudio is installed, open the application to make sure everything went ok.\n\nFor more information, please have a look at these instructions for [Installing R and RStudio](https://rstudio-education.github.io/hopr/starting.html).\n\n# R packages\n\nR packages extend the functionality of R by providing additional functions, data, and documentation. Packages are written by a worldwide community of R users and can be downloaded for free from numerous online repositories. A repository, or repo, is simply a place where packages are located on the web. The three most popular repositories for R packages are:\n\n-   The [Comprehensive R Archive Network, or CRAN](https://cran.r-project.org/web/packages/): the official R package repository, it is a network of ftp and web servers maintained by the R community around the world. The R foundation coordinates CRAN, and for a package to be published here, it needs to pass several tests that ensure the package is following [CRAN policies](https://cran.r-project.org/web/packages/policies.html).\n\n-   [Bioconductor](https://www.bioconductor.org/): this is a topic specific repository, intended for open source bioinformatics software. As with CRAN, Bioconductor has its own submission and review processes, and its community is very active.\n\n-   [Github](https://github.com/) : although this is not R specific, Github is probably the most popular repository for open source projects. Its popularity comes from the unlimited space for open source, the integration with git (a version control software), and its ease to share and collaborate with others. **But be aware that there is no review process associated with GitHub package repos**.\n\n```{r}\n#| eval: true\n#| echo: false\n#| message: false\n \nrequire(webdriver)\nrequire(rvest)\n\nurl <- \"https://cran.r-project.org/web/packages/\"\n# NEED to run this once, IN R\n# install_phantomjs()\npjs_instance <- run_phantomjs()\npjs_session <- Session$new(port = pjs_instance$port)\n# load URL to phantomJS session\npjs_session$go(url)\n# retrieve the rendered source code of the page\nrendered_source <- pjs_session$getSource()\n# parse the dynamically rendered source code\nhtml_document <- xml2::read_html(rendered_source)\n\ncount_xpath <- '/html/body/div/p[1]'\ncount_text <- html_document %>%\n  html_node(xpath = count_xpath) %>%\n  html_text(trim = T)\n\ncount_text <- count_text %>% stringr::str_extract(\"[0-9]+\")\n```\n\n```{r}\n#| eval: true\n#| echo: false\ncontent <- read_html(\"https://bioconductor.org/packages/3.14/bioc/\")\ntables <- content %>% html_table(fill = TRUE)\ntables <- data.frame(tables)\n```\n\nOn CRAN alone there are over `r count_text` packages available and an additional `r nrow(tables)` packages on Bioconductor. You will need a few packages to get going with your web project and you will install more as the need arises.\n\n### How to install R packages\n\nBefore you install any packages, check to see if the package is already installed. You have a few options. First, open R. If you want to see all the packages you have installed you can run:\n\n```{r}\n#| message: false\ninstalled.packages()\n```\n\nWhat about checking for a specific package, like `tmap`? `tmap` is an actively maintained open-source R-library for drawing [thematic maps](https://en.wikipedia.org/wiki/Thematic_map).\n\n```{r}\n#| message: false\n\"tmap\" %in% rownames(installed.packages())\n```\n\n```\n[1] FALSE\n```\n\nIf the output of this command is `TRUE`, you are good to go. If it says `FALSE` then the package is not installed.\n\nOr you can use the `library` command, which loads/attaches installed packages.\n\n```{r}\n#| message: false\nlibrary(tmap)\n```\n\nIf you do not get an error that means the package is already installed. However, if you see something like...\n\n```\nError in library(tmap) : there is no package called ‘tmap’`\n```\n\n...then the package needs to be installed.\n\n> I only use R (instead of RStudio) to install all of my packages. I have found this prevents any conflicts with installation location. Otherwise, I almost exclusively work in RStudio when creating web products.\n\nLet's run through a quick example. I have `r nrow(data.frame(installed.packages()))` R packages installed on my computer but I do not have `tmap`. Turns out that a stable version of `tmap` is available on [CRAN](http://cran.r-project.org/package=tmap) and a development version [GitHub](https://github.com/r-tmap/tmap)[^1]. First, here is how to install the stable version of the `tmap` package.\n\n[^1]: I figured this out by going to the `tmap` [CRAN](http://cran.r-project.org/package=tmap) repo and noticing that a GitHub page was listed under `URL`\n\n```{r}\n#| eval: false\n#| echo: true\ninstall.packages(\"tmap\")\n```\n\nIf all goes well, the beginning of the output should look something like this.\n\n```\nInstalling package into ‘/Users/scottjj/Library/R/4.1/library’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘wk’, ‘geometries’, ‘jsonify’, ‘rapidjsonr’,\n‘sfheaders’, ‘lwgeom’, ‘dichromat’, ‘s2’, ‘geojsonsf’, ‘tmaptools’, ‘sf’,\n‘stars’, ‘units’, ‘widgetframe’, ‘leafsync’, ‘leafem’\n```\n\nIn my case, the command is also installing around 15 dependencies---additional packages that `tmap` needs but that are not currently installed.\n\nIf instead we wanted to install the development version of [tmap](https://github.com/r-tmap/tmap#development), we need to install the `remotes` package and the run the `install_github` command[^2].\n\n[^2]: The authors state that in order to use the development version of `tmap`, it is recommended to use the development version of `tmaptools` as well\n\n```{r}\n#| echo: true\n#| eval: false\ninstall.packages(\"remotes\")\nlibrary(remotes)\ninstall_github(\"r-tmap/tmaptools\")\ninstall_github(\"r-tmap/tmap\")\n```\n\n```{r}\n#| echo: false\n#| eval: false\n\nlibrary(tmap)\nlibrary(tmaptools)\n\ndata(\"World\")\ncurrent.mode <- tmap_mode(\"view\")\n\n#tmap_mode(\"view\")\nna_sub <- World %>% subset(continent == 'North America') %>%\n  dplyr::filter(iso_a3 %in% c(\"JAM\", \"NIC\", \"PAN\", \"PRI\", \"SLV\", \"TTO\",\n                       \"BHS\", \"BLZ\", \"CRI\", \"CUB\", \"DOM\", \"GTM\", \"HND\", \"HTI\", \"MEX\"))\n\nsa_sub <- World %>% subset(continent == 'South America') %>%\n  dplyr::filter(iso_a3 %in% c(\"COL\", \"ECU\", \"VEN\", \"SUR\", \"GUY\"))\ntm_combo <- rbind(na_sub, sa_sub)\n```\n\nSweet. Let's see what this package can do. Here is a little toy example of an interactive thematic map made with `tmap`.\n\n```{r}\n#| echo: true\n#| eval: true\n#| code_folding: true\n#| fig-align: center\n#| message: false \n#| warning: false\n\nlibrary(tmap)\nlibrary(tmaptools)\ndata(\"World\")\ndata(metro)\ncurrent.mode <- tmap_mode(\"view\")\ntm_shape(World) +\n  tm_polygons(\"HPI\", palette = \"RdYlGn\", midpoint = 35) +\ntm_shape(metro) +\n  tm_bubbles(size = \"pop1950\") +\ntm_layout(design.mode = TRUE) +\ntm_view(set.view = c(lat = 9, lon = -81, zoom = 3))\n```\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"} Assignment: Installing R Packages\n\nOnce R and RStudio are installed you can install some essential packages. Remember, to install a package from CRAN, call the `library()` command with the package name in quotes `\"\"`, like so: `library(\"PACKAGE_NAME\")`\n\n-   [rmarkdown](https://cran.r-project.org/web/packages/rmarkdown/index.html): [R Markdown](https://rmarkdown.rstudio.com/) is a file format for making dynamic documents with R.\n-   [knitr](https://cran.r-project.org/web/packages/knitr/index.html): A general-purpose package for dynamic report generation in R.\n-   [distill](https://cran.r-project.org/web/packages/distill/index.html): R Markdown format for scientific and technical writing.\n-   [tidyverse](https://cran.r-project.org/web/packages/tidyverse/index.html): [Tidyverse](https://www.tidyverse.org/) is an opinionated collection of almost 30 R packages designed for data science. The [core tidyverse packages](https://www.tidyverse.org/packages/) are [ggplot2](https://ggplot2.tidyverse.org/), [tidyr](https://tidyr.tidyverse.org/), [dplyr](https://dplyr.tidyverse.org/), [readr](https://readr.tidyverse.org/), [tibble](https://tibble.tidyverse.org/), [forcats](https://forcats.tidyverse.org/), [purrr](https://purrr.tidyverse.org/), and [stringr](https://stringr.tidyverse.org/). These packages are loaded automatically when you run `library(tidyverse)`. Other packages in tidyverse need to be loaded separately with their own call to `library()`.\n\n\n> Note. If you are trying to install a package and get an error message containing something like `Timeout of 60 seconds was reached` you need to do the following:\n\nFirst run `getOption(\"timeout\")` to see what the timeout option is. I think the default is 60 seconds. If so, change it to something larger by running `options(timeout = seconds)` where `seconds` is an integer value. \n\n```{r}\ngetOption(\"timeout\")\noptions(timeout = 1000)\n```\n\nThis will only change the timeout for the current session. Once you quit R the setting will revert to 60 seconds. \n\nIf you have problems with any of these steps, we will help.\n\n# Getting Started\n\n### [{{< fa edit >}}]{style=\"color: steelblue;\"} Assignment: Get familiar with RStudio\n\nOnce you are all set up, open RStudio and start poking around. You can personalize the appearance of the IDE by going to `RStudio` \\> `Preferences`. You should also download this [cheat sheet](https://github.com/rstudio/cheatsheets/raw/main/rstudio-ide.pdf) that contains a lot of additional information on the RStudio IDE.\n\n# Concluding Remarks\n\nI wanted to leave you with a few final thoughts. I made my first commit to GitHub a little over three years ago with my first web product, a single page R Markdown HTML document. I am a microbial ecologist, and I was collaborating with four reef ecologists on a project about fish guts and microbes. Anyway, they were having a hard time understanding the microbial data, or I was doing a poor job of explaining it. So I made an HTML page outlining every step of my analysis, including all the code and results. My collaborators were so excited that they started sending me additional material to add to the page.\n\nAs the amount of material accumulated, the single page turned into a [project website](https://projectdigest.github.io/). I made a [GitHub repo](https://github.com/projectdigest/web/) for the site and used GitHub Pages to distribute site over the web. I did my best to document everything we did in that study. When we submitted the paper, I included the project website in the Data accessibility section so people could find information not included in the main paper or supplementary material. During the revision process, I was able to quickly address reviewer comments because I could pull material directly from the website without having to dig around in the depths of my computer.\n\n```{r}\n#| eval: true\n#| echo: false\nknitr::include_graphics(\"files/fish.png\")\n```\n\nThe site is nothing fancy but the entire project is now archived on the web. I learned by doing and that is my goal for you in this module. I also use R Markdown for presentations, my CV, and professional letters. Along the way, I have gained a lot of experience using other languages like HTML, CSS, and Hugo for my projects.\n\nAnd that's it for this lesson.\n\n##  Source Code {.appendix}\n\nThe source code for this page can be accessed on GitHub {{< fa brands github size=l >}} by [clicking this link](`r source_code()`). \n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":true,"code-line-numbers":false,"code-tools":{"source":false,"toggle":false,"caption":"none"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","self-contained":false,"css":["../../../assets/css/styles.css"],"toc":true,"toc-depth":2,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","bibliography":["../../../assets/cite.bib"],"citations-hover":true,"footnotes-hover":true,"smooth-scroll":false,"theme":{"light":"cosmo"},"fontsize":"1.2em","toc-location":"left","toc-title":"Contents","code-copy":true,"grid":{"sidebar-width":"250px","body-width":"900px","margin-width":"200px"},"appendix-style":"default","title-block-banner":true,"title-block-style":"default","title":"Lesson 2: Build your Working 🧱️ Environment","author":"Jarrod J Scott","description":"In this lesson we go through the steps building a working environment. Specifically, you will install R and RStudio IDE. You will also install some R packages needed to get started.\n","date":"2024-01-02","categories":["news","code","analysis"],"image":"files/feature.png","repository_url":"https://github.com/stri-mcgill-neo/2024/","reading-time":true,"knitr":{"opts_chunk":{"echo":true,"eval":false,"message":false,"warning":false}}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}